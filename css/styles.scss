@use './mixins' as *;
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;500;700&display=swap');

:root {
  --gradient-bg: #c15cff , #ff5454;
  --gradient-blocks: #eb4174 , #ffe3e3;
  --border-radius: 8px;
  --transition: 0.5s;
  --padding: 20px;
  --font-size-small: 18px;
  --font-size-medium: 24px;
  --font-size-large: 32px;
  --font-size-xlarge: 48px;
  --max-width: 500px;
}

* {
  box-sizing: border-box;
}

body {
  font-family: 'Quicksand', sans-serif;
  background-image: linear-gradient(90deg, var(--gradient-bg));
}

.btn {
  margin: calc(var(--padding)/ 2);
  padding: calc(var(--padding)/ 2) var(--padding);
  font-size: var(--font-size-medium);
  font-weight: bold;
  cursor: pointer;
  color: white;
  border-radius: var(--border-radius);
  background-image: linear-gradient(90deg, var(--gradient-bg));
  box-shadow: 4px 2px 6px 2px rgba($color: #000000, $alpha: 0.3) inset;
}

.start-game {
  position: fixed; 
  top: 0;
  left: 0;
  background-color: rgba($color: #000000, $alpha: 0.8);
  width: 100%;
  height: 100%;
  text-align: center;
  z-index: 2;
  .content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    @include res_mobile() {
      width: 300px;
    }
  }
  .start {
    display: block;
  }
  input {
    text-align: center;
    border-radius: var(--border-radius);
    border: none;
    background-color: rgba($color: #000000, $alpha: 0.5);
    padding: calc(var(--padding)/ 2) var(--padding);
    caret-color: white;
    color: white;
    @include res_mobile() {
      width: 100%;
    }
    font: {
      size: var(--font-size-medium)
    }
    &:focus {
      outline: none;
    }
  }
}

.info, 
.container-blocks {
  opacity: 0;
  visibility: hidden;
  transition: var(--transition);
  &.active {
    visibility: visible;
    opacity: 1;
  }
}

.info {
  max-width: var(--max-width);
  padding: var(--padding);
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  color: white;
  font-weight: bold;
  margin: var(--padding) auto 0;
  @include res_mobile() {
    line-height: 1.6;
  }
}

.container-blocks {
  max-width: var(--max-width);
  margin: var(--padding) auto 0;
  padding: var(--padding);
  background-image: linear-gradient(-90deg, var(--gradient-bg));
  box-shadow: 0px 0px 4px 2px rgba($color: #000000, $alpha: 0.2);
  display: flex;
  flex-wrap: wrap;
  position: relative;

  &.unclickable {
    pointer-events: none;
  }

  .block {
    text-align: center;
    position: relative;
    height: 80px;
    flex: 1 0 80px;
    transition: all var(--transition);
    margin: calc(var(--padding) / 2) ;
    transform-style: preserve-3d;
    @include res_mobile() {
      height: 50px;
      flex: 1 0 50px;
    }
    &.flipped,
    &.match,
    &.appears-block{
      transform: rotateY(180deg);
      pointer-events: none;
    }
    .face {
      border-radius: var(--border-radius);
      position: absolute;
      width: 100%;
      height: 100%;
      backface-visibility: hidden;
      cursor: pointer;
      &.front {
        line-height: 80px;
        background-color: #333;
        @include res_mobile() {
          line-height: 50px;
        }
      }
      &.back {
        background-color: white;
        transform: rotateY(180deg);
        img {
          width: 50px;
          height: 50px;
          margin-top: 15px;
          @include res_mobile() {
            width: 30px;
            height: 30px;
            margin-top: 10px;
          }
        }
      }
    }
  }

  .game-result {
    position: absolute;
    top: 0;
    left: 0;
    background-color: rgba(0, 0, 0, 0.6);
    width: 100%;
    height: 100%;
    font-size: var(--font-size-medium);
    color: white;
    z-index: -1;
    visibility: hidden;
    opacity: 0;
    transition: var(--transition);


    &.appear-result {
      z-index: 2;
      visibility: visible;
      opacity: 1;
      @include res_mobile {
        .content {
          width: 300px;
        }
      }
    }

    .content {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      text-align: center;
      span.play-again,
      span.result {
        display: block;
      }
      span.result {
        font: {
          size: var(--font-size-large);
          weight: bold;
        };
      }
    }
  }
}